# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Publish Python Package

on:
 release:
   types: [created, edited]

# on:
#   push:
#   pull_request:
#     types: [opened]

env:
  CIBW_SKIP: "cp27-* pp*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup git submodule
        run: git submodule update --init --recursive

      - name: Checkout cmark-gfm
        uses: actions/checkout@v2
        with:
          repository: github/cmark-gfm
          path: cmark-gfm

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install build deps
        run: |
          python -m pip --disable-pip-version-check install cibuildwheel==1.6.4 twine==3.2.0

      # - name: Install Compiler for Python 2.7 on Windows
      #   if: runner.os == 'Windows'
      #   run: |
      #     choco install vcpython27 -f -y
      #     python -m pip --disable-pip-version-check install --no-cache-dir --pre --index https://pypi.anaconda.org/carlkl/simple "mingwpy; python_version < '3.5'"

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build sdist
        if: runner.os == 'Linux'
        run: |
          python setup.py sdist

      - name: Publish sdist
        if: runner.os == 'Linux'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine check ./dist/*.tar.gz
          twine upload --skip-existing ./dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: |
            ./wheelhouse/*.whl
            ./dist/*.tar.gz

      - name: Publish wheels
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine check ./wheelhouse/*.whl
          twine upload --skip-existing ./wheelhouse/*
